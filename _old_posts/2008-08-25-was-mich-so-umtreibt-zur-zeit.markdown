--- 
wordpress_id: 384
layout: post
title: Was mich so umtreibt zur Zeit...
wordpress_url: http://localhost/~jankrutisch/wordpress/?p=384
---
...sind Dinge, die nur am Rande mit meiner aktuellen Profession (Das Entwickeln von Webanwendungen halt) zu tun haben. Und während ich eigentlich schon immer versucht habe, möglichst weit über den Tellerrand zu gucken und mich in meinen Hack-tivitäten (Allein das Wort schon!) nie auf ein Gebiet zu beschränken, ist der Kontrast momentan so hoch wie nie zuvor, was die Kontextwechsel etwas anstrengender macht als sonst. 

Aber warum ist das so?

Zum einen habe ich es endlich endlich geschafft, mal mit der Elektronik-Entwicklung anzufangen. Das hab ich zwar in der Diplomarbeit am Rande mitmachen müssen, aber jetzt selbst in der Lage zu sein (dank dem großartigen Arduino-Projekt), sowas zu Hause machen zu können, ist schon toll. Wenn man Leute, die eigentlich Softwareentwickler sind und die Hobbymäßig in Hardware machen, fragt, was sie so sehr daran fasziniert, dann hört man vor allem eines: Anfassen ist toll. Dinge im wahrsten Sinne des Wortes "be-greifen". Das ist auch das was ich am ReacTable so toll finde und warum wir jetzt endlich mal einen Neustart gewagt haben, um unser Mæshtable-Projekt mal zum Laufen zu bekommen. Ich habe den Eindruck, das könnt' was werden. Und es bringt mich zum nächsten Punkt:

Software wird anfassbarer. Wenn man das erste Mal etwas länger ein iPhone in der Hand hat, wird einem klar, was da für ein Potential drin steckt: iPhone-Anwendungen sind dann richtig richtig cool, wenn sie konsequent alle störenden Interface-Elemente weglassen. Wenn man einen Text eingeben muss, kommt man um die hässliche Bildschirmtastatur nicht herum, und das ist dann auch die Stelle, an der das iPhone am wenigsten Spaß macht. 

Webanwendungen dagegen, zumindest die meisten, müssen dagegen durch eine ganze Reihe von eigentlich überflüssigen Interfaces bedient werden: Zum einen die Mouse, an die wir uns zwar gewöhnt haben, die aber dennoch die Möglichkeiten unseres sensibelsten Interfaces nur sehr begrenzt ausnutzt. Und zum anderen Dinge wie der Browser, die Webseite, etc. die oft das ihrige dazu tun, dass einfache Dinge durch Indirektion, Verwirrung und Verstecken deutlich komplizierter werden, als sie sein müssten.
<!--more-->Eine schöne Parallele konnte man in den letzten paar Jahrzehnten im Musikbereich beobachten (und zwar gleich mehrmals). Als in den 70er Jahren die ersten Synthies für den Massenmarkt rauskamen, waren die meisten komplett Analog und hatten keinerlei Möglichkeit, Programme zu speichern. Das Interface war auch analog und bestand aus einer Reihe von Schaltern, Knöpfen, Schiebereglern und so weiter. Vorausgesetzt, der Designer der Oberfläche war kein kompletter Schwachkopf, waren die meisten dieser Synthies für jemanden mit rudimentären Kenntnissen der verwendeten Synthesemethode intuitiv erfassbar.
In den 80ern wurden dann Digitalsynthies populär, weil sie den analogen Geräten technisch überlegen waren UND vor allem weil sie in der Lage waren, Patches/Programme abzuspeichern und wieder aufzurufen. Und obwohl es damals bereits Motorfader und Endlosregler gab, war es eigentlich üblich, die ganze schöne analoge Bedienoberfläche wegzuwerfen und hinter ein 2-Zeiliges LCD-Display und ein paar Buttons zu verstecken. Es gab ein paar Ausnahmen, wie den Roland JD-800, die über ein paar Kniffe in der Lage waren auch ohne teure Motorfader die alte analoge Oberfläche zu simulieren, aber zu der Zeit war man ja schon froh, wenn man einen Endlosdrehregler hatte um wenigstens den Parameterwert etwas bequemer ändern zu können.

Ein weiteres Problem: Mit dem technischen Fortschritt wuchs auch die Komplexität der Soundarchitekturen, und damit wurde die Bedienung nicht nur komplizierter, sondern auch komplizierter zu verstehen. Ein Biest wie einen Roland JV880 wirklich komplett zu verstehen und alle Kniffe der Soundengine zu kennen ist 'ne anspruchsvolle Aufgabe.

Mitte der 90er gab es dann zwei Trends: Zum einen gab es eine neue Generation von Synthieherstellern, die genau diese Probleme in Angriff namen (und daraus entstanden Namen, die heute aus der Landschaft der elektronischen Musik nicht mehr wegzudenken sind, wie Novation (die mit der Bassstation genau zur richtigen Zeit den monophonen Analogsynthie wiederentdeckten) oder Access (Die mit dem Virus immer noch einen der besten Synthies aller Zeiten bauen), in dem sie nämlich zum einen wieder simplere Soundengines bauten und zum anderen wieder große Teile der Soundprogrammierung direkt über Knöpfe und Schalter nach draussen erreichbar machten. 

Zum anderen ging man dazu über, den Rechner als Bedienoberfläche zu nutzen (Das Produkt der Zeit, den Patcheditor Sounddiver, gibt es nicht mehr seit Apple Emagic aufgekauft haben, aber dazu gleich mehr). Wobei diese Oberflächen zwar in der Lage sind, die große Komplexität der Synthies besser abzubilden, aber die Bedienung derselben immer noch Golfbälle durch Gartenschläche saugt (Man zeige mir eine wirklich gelungene Implementation eines Drehreglers auf einer per Mouse bedienbaren Oberfläche...).

Einen Mittelweg ging Korg: Die großen Workstations von denen hatten allesamt veritable Touchscreens, die schon mal wesentlich besser zu bedienen waren als die mickrigen LCD-Screens).

Spätestens Anfang der 00er wurden dann die Rechner so leistungsfähig, dass man anfing, große Teile der Sounderzeugung in den Rechner zu übertragen. Die Softsynths waren geboren. Hier greift das Problem der oben angesprochenen Patcheditoren. Es gibt einige Softwares, die das Problem besser lösen, aber die meisten sind nicht in der Lage sich von den Metaphern Drehregler und fester Oberfläche zu lösen.

Und hier schließt sich der Kreis: Seit ein paar Jahren werden über USB anschließbare Hardwarecontroller immer populärer, teilweise (Siehe Korg) werden Softsynths sogar mit solchen Controller-Einheiten verkauft). 

Mit anderen Worten: Man kann davon ausgehen, dass es der Natur des Musikers entspricht, seine Instrumente anfassen zu wollen. Direkter Zugriff auf Parameter ist im Zweifel sogar wichtiger als komplexe Möglichkeiten der Soundengine. Und genau hier liegt die Chance: Man kann davon ausgehen, dass die armen Musiker mit diesen Wünschen nicht allein sind. Dinge wie das iPhone (oder auch mein inzwischen geliebtes Nintendo DS) schaffen Möglichkeiten, Software zum Anfassen zu entwickeln, ohne unnötige Interfaces dazwischen.
